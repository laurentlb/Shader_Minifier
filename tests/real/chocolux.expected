// Generated with  (https://github.com/laurentlb/Shader_Minifier/)
#ifndef CHOCOLUX_EXPECTED_
# define CHOCOLUX_EXPECTED_
# define VAR_resolution "d"
# define VAR_time "v"

const char *chocolux_frag =
 "uniform vec2 d;"
 "uniform float v;"
 "float s(vec3 d)"
 "{"
   "return distance(d,vec3(cos(v)+sin(v*.2),.3,2.+cos(v*.5)*.5))*distance(d,vec3(-cos(v*.7),.3,2.+sin(v*.5)))*distance(d,vec3(-sin(v*.2)*.5,sin(v),2))*(cos(d.y)*cos(d.x)-.1-cos(d.z*7.+v*7.)*cos(d.x*3.)*cos(d.y*4.)*.1);"
 "}"
 "void main()"
 "{"
   "vec2 c=-1.+2.*gl_FragCoord.xy/d.xy;"
   "vec3 i=vec3(c.x,c.y*1.25-.3,0),y=vec3(c.x+cos(v)*.3,c.y,1)/64.;"
   "vec4 f=vec4(0);"
   "float x=0.;"
   "for(int v=0;v<75;v++)"
     "{"
       "if(s(i+y*x)<.4)"
         "{"
           "x-=5.;"
           "for(int f=0;f<5;f++)"
             "{"
               "if(s(i+y*x)<.4)"
                 "break;"
               "x+=1.;"
             "}"
           "vec3 d=vec3(.01,0,0),v=vec3(0);"
           "v.x=s(i+y*x)-s(vec3(i+y*x+d.xyy));"
           "v.y=s(i+y*x)-s(vec3(i+y*x+d.yxy));"
           "v.z=s(i+y*x)-s(vec3(i+y*x+d.yyx));"
           "v=normalize(v);"
           "f+=max(dot(vec3(0,0,-.5),v),0.)+max(dot(vec3(0,-.5,.5),v),0.)*.5;"
           "break;"
         "}"
       "x+=5.;"
     "}"
   "gl_FragColor=f+x*.025*vec4(.1,.2,.5,1);"
 "}";

#endif // CHOCOLUX_EXPECTED_
