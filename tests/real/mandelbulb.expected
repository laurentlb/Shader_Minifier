// Generated with  (https://github.com/laurentlb/Shader_Minifier/)
#ifndef MANDELBULB_EXPECTED_
# define MANDELBULB_EXPECTED_

const char *mandelbulb_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "bool f(vec4 v,vec3 f,vec3 o,out vec2 i)"
 "{"
   "vec3 y=f-v.xyz;"
   "float c=dot(y,o),e=dot(y,y)-v.w*v.w,x=c*c-e;"
   "if(x<0.)"
     "return false;"
   "float t=sqrt(x);"
   "i.x=-c-t;"
   "i.y=-c+t;"
   "return true;"
 "}"
 "bool f(vec3 v,out float f,out vec4 y)"
 "{"
   "vec4 i=vec4(100);"
   "vec3 c=v;"
   "float x=dot(c,c);"
   "if(x>1e2)"
     "return f=.5*log(x)/pow(8.,0.),y=vec4(1),false;"
   "for(int t=1;t<7;t++)"
     "{"
       "\n#if 0\n"
       "float z=sqrt(dot(c,c)),o=acos(c.y/z),s=atan(c.x,c.z);"
       "z=pow(z,8.);"
       "o*=8.;"
       "s*=8.;"
       "c=v+z*vec3(sin(o)*sin(s),cos(o),sin(o)*cos(s));"
       "\n#else\n"
       "float d=c.x,n=d*d,m=n*n,p=c.y,e=p*p,a=c.z,w=a*a,l=w*w,g=n+w,r=inversesqrt(g*g*g*g*g*g*g),C=m+e*e+l-6.*e*w-6.*n*e+2.*w*n,F=n-e+w;"
       "c.x=v.x+64.*d*p*a*(n-w)*F*(m-6.*n*w+l)*C*r;"
       "c.y=v.y+-16.*e*g*F*F+C*C;"
       "c.z=v.z+-8.*p*F*(m*m-28.*m*n*w+70.*m*l-28.*n*w*l+l*l)*C*r;"
       "\n#endif\n"
       "x=dot(c,c);"
       "i=min(i,vec4(c.xyz*c.xyz,x));"
       "if(x>1e2)"
         "return y=i,f=.5*log(x)/pow(8.,float(t)),false;"
     "}"
   "y=i;"
   "f=0.;"
   "return true;"
 "}"
 "bool f(vec3 v,vec3 c,out float y,float e,out vec3 o,out vec4 x,float g)"
 "{"
   "vec4 i=vec4(0,0,0,1.25);"
   "vec2 n;"
   "if(!f(i,v,c,n))"
     "return false;"
   "if(n.y<.001)"
     "return false;"
   "if(n.x<.001)"
     "n.x=.001;"
   "if(n.y>e)"
     "n.y=e;"
   "float t;"
   "vec3 z;"
   "vec4 s;"
   "float w=1./sqrt(1.+g*g);"
   "for(float d=n.x;d<n.y;)"
     "{"
       "vec3 m=v+c*d;"
       "float a=clamp(.001*d*w,1e-6,.005),l=a*.1;"
       "vec4 r;"
       "float p;"
       "if(f(m,p,s))"
         "return y=d,o=normalize(z),x=s,true;"
       "float C;"
       "f(m+vec3(l,0,0),C,r);"
       "float F;"
       "f(m+vec3(0,l,0),F,r);"
       "float E;"
       "f(m+vec3(0,0,l),E,r);"
       "z=vec3(C-p,F-p,E-p);"
       "t=.5*p*l/length(z);"
       "if(t<a)"
         "return x=s,o=normalize(z),y=d,true;"
       "d+=t;"
     "}"
   "return false;"
 "}"
 "void main()"
 "{"
   "vec2 v=-1.+2.*gl_FragCoord.xy/resolution.xy,c=v*vec2(1.33,1);"
   "vec3 y=vec3(.577),x=vec3(-.707,0,.707);"
   "float o=1.,m=1.4+.2*cos(6.28318*time/20.);"
   "vec3 n=vec3(m*sin(6.28318*time/20.),.3-.4*sin(6.28318*time/20.),m*cos(6.28318*time/20.)),s=vec3(0,.1,0),l=normalize(s-n),z=vec3(0,1,0),w=normalize(cross(l,z)),e=normalize(cross(w,l)),p=normalize(c.x*w+c.y*e+1.5*l),g,i;"
   "vec4 t;"
   "float C;"
   "if(f(n,p,C,1e20,g,t,o))"
     "{"
       "vec3 d=n+C*p;"
       "float r=clamp(.2+.8*dot(y,g),0.,1.);"
       "r*=r;"
       "float F=clamp(.3+.7*dot(x,g),0.,1.),a=clamp(1.25*t.w-.4,0.,1.);"
       "a=a*a*.5+.5*a;"
       "float E;"
       "vec3 D;"
       "vec4 B;"
       "if(r>.001)"
         "if(f(d,y,E,1e20,D,B,o))"
           "r=.1;"
       "i=vec3(1);"
       "i=mix(i,vec3(.8,.6,.2),sqrt(t.x)*1.25);"
       "i=mix(i,vec3(.8,.3,.3),sqrt(t.y)*1.25);"
       "i=mix(i,vec3(.7,.4,.3),sqrt(t.z)*1.25);"
       "i*=(.5+.5*g.y)*vec3(.14,.15,.16)*.8+r*vec3(1,.85,.4)+.5*F*vec3(.08,.1,.14);"
       "i*=vec3(pow(a,.8),pow(a,1.),pow(a,1.1));"
       "i=1.5*(i*.15+.85*sqrt(i));"
     "}"
   "else"
     " i=1.3*vec3(1,.98,.9)*(.7+.3*p.y);"
   "vec2 d=v*.5+.5;"
   "i*=.7+4.8*d.x*d.y*(1.-d.x)*(1.-d.y);"
   "i=clamp(i,0.,1.);"
   "gl_FragColor=vec4(i,1);"
 "}";

#endif // MANDELBULB_EXPECTED_
