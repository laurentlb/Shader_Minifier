// Generated with  (https://github.com/laurentlb/Shader_Minifier/)
#ifndef BLOCKS_EXPECTED_
# define BLOCKS_EXPECTED_

const char *blocks_frag =
 "float test_if()"
 "{"
   "int foo=2;"
   "if(foo==2)"
     "foo++;"
   "return foo<5?"
     "foo==3?"
       ".2:"
       ".3:"
     ".4;"
 "}"
 "int k=5;"
 "float test_for()"
 "{"
   "int foo=2,n=0;"
   "for(int i=0;i<4;i++)"
     "foo+=i;"
   "for(foo++;n<4;n++)"
     "{"
       "int k=n-1;"
       "foo+=k;"
     "}"
   "return 1./float(k);"
 "}"
 "int test_block()"
 "{"
   "k==0;"
   "for(int i=0;i<2;i++)"
     "{"
       "if(k==1)"
         "return k++,2;"
       "break;"
     "}"
 "}"
 "float removeUselessElseAfterReturn1(float f)"
 "{"
   "if(f<2.)"
     "return 1.;"
   "f=4.;"
   "return 5.;"
 "}"
 "float removeUselessElseAfterReturn2(float f)"
 "{"
   "return f<2.?"
     "1.:"
     "5.;"
 "}"
 "float replaceIfReturnsByReturnTernary1(float f)"
 "{"
   "return f<2.?"
     "f:"
     "f+1.;"
 "}"
 "void main()"
 "{"
   "float a=test_if(),b=test_for();"
   "removeUselessElseAfterReturn1(0.);"
   "removeUselessElseAfterReturn2(0.);"
   "replaceIfReturnsByReturnTernary1(0.);"
   "gl_FragColor=vec4(.2,a,b,0);"
   "a<b;"
   "a<b;"
 "}";

#endif // BLOCKS_EXPECTED_
