// Generated with  (https://github.com/laurentlb/Shader_Minifier/)
# define VAR_ambientLight "z"
# define VAR_diffuseColor "C"
# define VAR_emissiveColor "c"
# define VAR_fragmentColor "r"
# define VAR_mediumDensity "f"
# define VAR_normal "m"
# define VAR_specularColor "p"
# define VAR_texture0 "v"
# define VAR_viewVec "d"

// tests/unit/inout.frag
"#version 330\n"
 "uniform samplerCube v;"
 "in vec3 m,d;"
 "out vec4 r;"
 "void main()"
 "{"
   "vec3 c=normalize(d),f=normalize(m),p=vec3(.1,.2,.3),z=texture(v,reflect(-c,f)).xyz,C=texture(v,refract(-c,f,1./1.5)).xyz;"
   "r=vec4(mix(p*C,z,.1),1);"
 "}"
 "vec3 t(vec3 v,vec3 m,vec3 f)"
 "{"
   "float r=1.-clamp(dot(m,f),0.,1.);"
   "return r*r*r*r*r*(1.-v)+v;"
 "}"
 "vec3 t(vec3 v,vec3 m,vec3 f,vec3 r,vec3 c,float s)"
 "{"
   "vec3 d=normalize(v+m),p,z,C;"
   "float M=1.+2048.*(1.-s)*(1.-s);"
   "p=r;"
   "z=vec3(pow(clamp(dot(d,f),0.,1.),M)*(M+4.)/8.);"
   "C=t(c,v,d);"
   "return mix(p,z,C);"
 "}",

// tests/unit/inout2.frag
"#version 330\n"
 "uniform samplerCube v;"
 "uniform float f;"
 "uniform vec3 z,C,c,p;"
 "in vec3 m,d;"
 "out vec4 r;"
 "vec3 t(vec3 v,vec3 m,vec3 f)"
 "{"
   "float r=1.-clamp(dot(m,f),0.,1.);"
   "return r*r*r*r*r*(1.-v)+v;"
 "}"
 "void main()"
 "{"
   "vec3 v=C,d=c+mix(v*z,z,.5);"
   "r=vec4(d,1);"
 "}"
 "vec3 t(vec3 v,vec3 m,vec3 f,vec3 r,vec3 c,float s)"
 "{"
   "vec3 d=normalize(v+m),z,C,p;"
   "float M=1.+2048.*(1.-s)*(1.-s);"
   "z=r;"
   "C=vec3(pow(clamp(dot(d,f),0.,1.),M)*(M+4.)/8.);"
   "p=t(c,v,d);"
   "return mix(z,C,p);"
 "}",
