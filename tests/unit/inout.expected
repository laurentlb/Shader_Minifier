// Generated with  (https://github.com/laurentlb/Shader_Minifier/)
# define VAR_ambientLight "f"
# define VAR_diffuseColor "z"
# define VAR_emissiveColor "r"
# define VAR_fragmentColor "m"
# define VAR_mediumDensity "s"
# define VAR_normal "d"
# define VAR_specularColor "C"
# define VAR_texture0 "v"
# define VAR_viewVec "c"

// tests/unit/inout.frag
"#version 330\n"
 "uniform samplerCube v;"
 "in vec3 d,c;"
 "out vec4 m;"
 "void main()"
 "{"
   "vec3 s=normalize(c),f=normalize(d),p=vec3(.1,.2,.3),r=texture(v,reflect(-s,f)).xyz,z=texture(v,refract(-s,f,1./1.5)).xyz,C=mix(p*z,r,.1);"
   "m=vec4(C,1);"
 "}"
 "vec3 t(vec3 v,vec3 d,vec3 f)"
 "{"
   "float m=1.-clamp(dot(d,f),0.,1.);"
   "return m*m*m*m*m*(1.-v)+v;"
 "}"
 "vec3 t(vec3 v,vec3 m,vec3 f,vec3 d,vec3 s,float c)"
 "{"
   "vec3 r=normalize(v+m),p,z,C;"
   "float M=1.+2048.*(1.-c)*(1.-c);"
   "p=d;"
   "z=vec3(pow(clamp(dot(r,f),0.,1.),M)*(M+4.)/8.);"
   "C=t(s,v,r);"
   "return mix(p,z,C);"
 "}",

// tests/unit/inout2.frag
"#version 330\n"
 "uniform samplerCube v;"
 "uniform float s;"
 "uniform vec3 f,z,r,C;"
 "in vec3 d,c;"
 "out vec4 m;"
 "vec3 t(vec3 v,vec3 d,vec3 f)"
 "{"
   "float m=1.-clamp(dot(d,f),0.,1.);"
   "return m*m*m*m*m*(1.-v)+v;"
 "}"
 "void main()"
 "{"
   "vec3 v=z,d=r+mix(v*f,f,.5);"
   "m=vec4(d,1);"
 "}"
 "vec3 t(vec3 v,vec3 f,vec3 d,vec3 m,vec3 s,float c)"
 "{"
   "vec3 r=normalize(v+f),z,C,p;"
   "float M=1.+2048.*(1.-c)*(1.-c);"
   "z=m;"
   "C=vec3(pow(clamp(dot(r,d),0.,1.),M)*(M+4.)/8.);"
   "p=t(s,v,r);"
   "return mix(z,C,p);"
 "}",
