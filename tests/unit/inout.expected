// Generated with  (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_ambientLight "r"
# define VAR_diffuseColor "c"
# define VAR_emissiveColor "p"
# define VAR_fragmentColor "f"
# define VAR_mediumDensity "s"
# define VAR_normal "m"
# define VAR_specularColor "i"
# define VAR_texture0 "v"
# define VAR_viewVec "d"
#endif

#else // if SHADER_MINIFIER_IMPL

// tests/unit/inout.frag
"#version 330\n"
 "uniform samplerCube v;"
 "in vec3 m,d;"
 "out vec4 f;"
 "void main()"
 "{"
   "vec3 c=normalize(d),r=normalize(m);"
   "f=vec4(mix(vec3(.1,.2,.3)*texture(v,refract(-c,r,1./1.5)).xyz,texture(v,reflect(-c,r)).xyz,.1),1);"
 "}"
 "vec3 e(vec3 v,vec3 m,vec3 r)"
 "{"
   "float f=1.-clamp(dot(m,r),0.,1.);"
   "return f*f*f*f*f*(1.-v)+v;"
 "}"
 "vec3 e(vec3 v,vec3 m,vec3 r,vec3 c,vec3 d,float f)"
 "{"
   "vec3 p=normalize(v+m),i;"
   "float s=1.+2048.*(1.-f)*(1.-f);"
   "i=e(d,v,p);"
   "return mix(c,vec3(pow(clamp(dot(p,r),0.,1.),s)*(s+4.)/8.),i);"
 "}",

// tests/unit/inout2.frag
"#version 330\n"
 "uniform samplerCube v;"
 "uniform float s;"
 "uniform vec3 r,c,p,i;"
 "in vec3 m,d;"
 "out vec4 f;"
 "vec3 e(vec3 v,vec3 m,vec3 r)"
 "{"
   "float f=1.-clamp(dot(m,r),0.,1.);"
   "return f*f*f*f*f*(1.-v)+v;"
 "}"
 "void main()"
 "{"
   "f=vec4(p+mix(c*r,r,.5),1);"
 "}"
 "vec3 e(vec3 v,vec3 m,vec3 r,vec3 c,vec3 d,float f)"
 "{"
   "vec3 p=normalize(v+m),i;"
   "float s=1.+2048.*(1.-f)*(1.-f);"
   "i=e(d,v,p);"
   "return mix(c,vec3(pow(clamp(dot(p,r),0.,1.),s)*(s+4.)/8.),i);"
 "}",

#endif
