// Generated with  (https://github.com/laurentlb/Shader_Minifier/)
# define VAR_ambientLight "z"
# define VAR_diffuseColor "e"
# define VAR_emissiveColor "n"
# define VAR_fragmentColor "r"
# define VAR_mediumDensity "f"
# define VAR_normal "m"
# define VAR_specularColor "o"
# define VAR_texture0 "v"
# define VAR_viewVec "d"

// tests/unit/inout.frag
"#version 330\n"
 "uniform samplerCube v;"
 "in vec3 m,d;"
 "out vec4 r;"
 "void main()"
 "{"
   "vec3 t=normalize(d),f=normalize(m),c=vec3(.1,.2,.3),z=texture(v,reflect(-t,f)).xyz,e=texture(v,refract(-t,f,1./1.5)).xyz,p=mix(c*e,z,.1);"
   "r=vec4(p,1);"
 "}"
 "vec3 t(vec3 v,vec3 m,vec3 f)"
 "{"
   "float r=1.-clamp(dot(m,f),0.,1.);"
   "return r*r*r*r*r*(1.-v)+v;"
 "}"
 "vec3 t(vec3 v,vec3 m,vec3 f,vec3 r,vec3 d,float c)"
 "{"
   "vec3 p=normalize(v+m),z,e,o;"
   "float s=1.+2048.*(1.-c)*(1.-c);"
   "z=r;"
   "e=vec3(pow(clamp(dot(p,f),0.,1.),s)*(s+4.)/8.);"
   "o=t(d,v,p);"
   "return mix(z,e,o);"
 "}",

// tests/unit/inout2.frag
"#version 330\n"
 "uniform samplerCube v;"
 "uniform float f;"
 "uniform vec3 z,e,n,o;"
 "in vec3 m,d;"
 "out vec4 r;"
 "vec3 t(vec3 v,vec3 m,vec3 f)"
 "{"
   "float r=1.-clamp(dot(m,f),0.,1.);"
   "return r*r*r*r*r*(1.-v)+v;"
 "}"
 "void main()"
 "{"
   "vec3 v=e,f=n+mix(v*z,z,.5);"
   "r=vec4(f,1);"
 "}"
 "vec3 t(vec3 v,vec3 m,vec3 f,vec3 r,vec3 z,float c)"
 "{"
   "vec3 d=normalize(v+m),e,o,p;"
   "float s=1.+2048.*(1.-c)*(1.-c);"
   "e=r;"
   "o=vec3(pow(clamp(dot(d,f),0.,1.),s)*(s+4.)/8.);"
   "p=t(z,v,d);"
   "return mix(e,o,p);"
 "}",
